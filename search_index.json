[["index.html", "My Thesis Introduction Welcome Motivation Structure Acknowledgements", " My Thesis Your R. Name Introduction Welcome Welcome to the gaelsdown guide! This document is intended to get you up and running with writing your thesis in R markdown so that it can be published in a variety of formats, most importantly a .pdf with formatting specifications in the TeX language. In this introduction chapter, Ill go through the benefits of adopting gaelsdown into your writing process and what to expect, then explain the basics of how you get from a R markdown to a formatted pdf. Then, in the first chapter of the guide, Ill provide you with all the basic tools to put together a document with formatting, figures and tables, and a structure appropriate to your thesis. In the second chapter, Ill get into some of the more advanced methods for figures and tables, specifying formatting inline, and more. Finally, in the third chapter, Ill go over some common issues and how you can address them, as well as providing more resources and approaches for troubleshooting. Motivation The purpose of gaelsdown is to enable you to write your thesis in R markdown so that you can focus on the content of your thesis. With R markdown, you can insert code for figures, tables, and references at ease, then transform the markdown file into a finished, formatted document that meets the specifications provided by the School of Graduate Studies. This is a departure from what may be a more familiar approach of using R to generate tables and figures separately, then inserting those into a What-You-See-Is-What-You-Get (WYSIWYG) editor like Microsoft Word. Theres a number of advantages to this approach over using a WYSIWYG editor, including: Your R code and writing are streamlined into one document, so that changes to figures and tables are automatically integrated whenever you knit your document, and the bibliography and table of contents are automatically generated. R markdown is a much more lightweight format, which reduces the load on your computer significantly if your thesis has hundreds of pages and includes many figures. The files making up your thesis are in plain text formats that can be easily transferred between platforms and require only free, open source software. By using to generate your document, you have access to a wide range of packages to support different types of mathematical and scientific formulas and a professional-quality typesetting engine. Many journals make .tex templates available for authors, which can help with submission. There are also several options for converting from a LaTeX document to a Word-compatible format. If youre writing a thesis for Queens University, the formatting of the pdf output already conforms to the specifications that the school has published. If youre writing for another school, or if youd like to change some of the formatting, changes can be made in one place that apply to the whole document. However, there are some potential challenges with writing your thesis in R markdown, especially if this is a new approach for you. This guide will help with avoiding or anticipating some of these challenges, but be aware of the following: Introducing formatting changes into a LaTeX document is a different process than in a WYSIWYG editor, and involves a bit of a learning curve. However, by using a template such as gaelsdown, you can avoid much of the LaTeX editing and focus on the content of your thesis. gaelsdown relies on a few different programs when it knits together your document, which means theres a few different steps at which an error can be introduced. Ill explain what these steps are, and tips for addressing any issues encountered at each step. Structure To understand how gaelsdown and similar template packages work, you need to understand the different software involved: knitr converts your R markdown file (.Rmd) into a markdown file (.md). The different between a R markdown file is that it includes R code chunks that need to be rendered as images for them to be markdown compatible. pandoc is included with your RStudio install and is capable of converting between a large number of different text formats, including markdown, Word (.docx), web browser compatible (.html), and LaTeX (.tex). LaTeX renders a typeset format such as PDF from .tex filesif you knit into another format such as gitbook or Word, LaTeX will not have been involved. Heres a visualization of how it all flows together: If you knitted this document locally from the gaelsdown package and watched the console carefully, then youve already seen all these steps in action! You can run the knit again if you want to review it. Acknowledgements The preface pretty much says it all. Second paragraph of abstract starts here. "],["1-getting-started.html", "Chapter 1 Getting started 1.1 Writing in markdown 1.2 Figures and tables in R markdown 1.3 Assembling your thesis 1.4 Summary", " Chapter 1 Getting started If youve reached this step, you should have already installed the gaelsdown and tinytex packages and knit your first document (this one!). If not, first take a look at the README for instructions explaining these steps. 1.1 Writing in markdown In RStudio, you write in Pandoc Markdown to generate publishable documents. That means this is a valuable skill even if youre not using a LaTeX template, and its also an easy skill to pick up. The basic principle behind markdown is that it should be easy to read even in plain text, and it accomplishes this by using special characters in intuitive ways. For example, to italicize (emphasis) a word or line of text, you place it inside a pair of underscores or asterisks like so: _italicize_. To make a line boldface (strong emphasis), you put with two underscores or asterisks: __boldface__. Where you start to get into real power of markdown is the ability to structure a document, such as by using headers. I mark the beginning of this chapter with a level-one header, # Getting started, and the beginning of this section with a level-two header, ## Writing in markdown. If, say, we wanted to jump to another chapter, I could include a link using the header name [Introduction]: Introduction. For a full primer on the features available in Pandoc Markdown, including the ability to insert lists, blockquotes, code chunks, and math, read this tutorial. 1.2 Figures and tables in R markdown If you looked through the Pandoc Markdown tutorial, you may have noticed that there are features to include tables and images. However, the beauty of R markdown is that you can insert tables and figures using R code, then allow knitr to convert this code into a markdown format. To do this, Ill first need to load some R packages: # List of packages required for this analysis pkg &lt;- c(&quot;dplyr&quot;, &quot;ggplot2&quot;, &quot;knitr&quot;, &quot;bookdown&quot;, &quot;devtools&quot;) # Check if packages are not installed and assign the # names of the packages not installed to the variable new.pkg new.pkg &lt;- pkg[!(pkg %in% installed.packages())] # If there are any packages in the list that aren&#39;t installed, # install them if (length(new.pkg)) install.packages(new.pkg, repos = &quot;http://cran.rstudio.com&quot;) # Load packages (This can be accomplished by just loading gaelsdown) library(gaelsdown) Once the packages are loaded, I can assemble a basic table with R like so: mtcars %&gt;% head() %&gt;% kable() mpg cyl disp hp drat wt qsec vs am gear carb Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 Valiant 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1 Alternatively, I may want to produce a plot: ggplot(data = mtcars, aes(x = wt, y = mpg)) + geom_point() + theme_classic() Ill have some tips on how to make your tables and figures look great in the next chapter on [Advanced methods]. 1.3 Assembling your thesis Although the final product you obtain using gaelsdown will likely be a single document contained in one file, there are multiple files that go into creating this document. Theres a simplicity to this in that each individual file has a specific function within the larger document, and Ill explain how you can customize the structure of your thesis by adding or removing certain files or sections. 1.3.1 YAML Aint Markup Language Every thesis generated using this template has an index.Rmd file. This is the file you use to knit the document, and it contains your YAML section (recursively named, YAML Aint Markup Language). Information from the YAML is passed onto Pandoc, and may include specifications for the output format and other options. You can also include frontmatter material here, such as your abstract. Open up index.Rmd in RStudio to see what the YAML looks like. Its the section at the beginning bracketed by three dashes: --- --- You need to be particularly attentive to the spaces in the YAML, so make sure when uncommenting lines you only remove the # and not the spaces! At the top of the YAML are some pieces of information that get passed along to the title page, such as the title and author name. Since the format for title pages are set for Queens University, youll want to change the answers to these entries, but not which lines are included (To change the format of the title page, youd have to go into the .tex template). Following this youll find your output options. Here, you have the option of either PDF, gitbook (web page), Word, and EPUB; to change the format, just comment out the active line and uncomment the appropriate line. After this are lines for your introductory material: abstract, acknowledgements, glossary, etc. These sections are frontmatter, will appear before the Table of Contents, are numbered with Roman instead of Arabic numerals, and wont be labelled as chapters. Frontmatter is a bit quirky in that it needs to be read directly into LaTeX, so the frontmatter sections have to be defined in the .tex template and the YAML. Ive defined all of the required and optional frontmatter sections specified for Queens University theses, with some of them commented out. If you want to include frontmatter in another output format such as Word, then it has to be defined in the body of the .Rmd file, not the YAML. After this are instructions for your references section. Theres some defaults here for this document but youll want to specify your own bib and csl file. The process for using these are the same as in bookdown, so for instructions on how to specify the bibliography and csl sections, follow Yihui Xies tutorial here. 1.3.2 Folders and files Upon creating your gaelsdown project in RStudio, your folder will have the following files and folders: 1.3.2.1 bib/ In here is your .bib file, specified in the YAML. 1.3.2.2 csl/ In here is your .csl file, specified in the YAML. 1.3.2.3 data/ and figure/ These are just folders for example data and figures; you can set the folders as you wish for scripts, etc. 1.3.2.4 _bookdown.yml Configuration file for bookdown, the package underlying gaelsdown. You can change the output file and chapter prefixes here; see the bookdown reference for more information. 1.3.2.5 01-chap1.Rmd, 02-chap2.Rmd These are the main chapters of your thesis, which gaelsdown will join into one document. The .Rmd files in your main directory will all be knit together, so you can add as many files as you need and its not necessary to follow this naming format (it just makes things easier to read). 1.3.2.6 98-references.Rmd Your references come after every section apart from the appendix. 1.3.2.7 99-appendix.Rmd The appendices come after the references. You can add as many appendix sections as necessary. 1.3.3 Library calls and importing data To 1.4 Summary In this section, Ive covered Within your Index.Rmd: YAML frontmatter yaml instructions bib and cls files Library calls and data import Folder structure Diagram! "],["2-additional-methods.html", "Chapter 2 Additional methods 2.1 Version control 2.2 kableExtra", " Chapter 2 Additional methods This section is still in the works. 2.1 Version control 2.2 kableExtra "],["3-understanding-how-gaelsdown-works-and-troubleshooting.html", "Chapter 3 Understanding how gaelsdown works and troubleshooting", " Chapter 3 Understanding how gaelsdown works and troubleshooting This section is still in the works. "],["conclusion.html", "Conclusion", " Conclusion If we dont want Conclusion to have a chapter number next to it, we can add the {-} attribute. More info And heres some other random info: the first paragraph after a chapter title or section head shouldnt be indented, because indents are to tell the reader that youre starting a new paragraph. Since thats obvious after a chapter or section title, proper typesetting doesnt add an indent there. "],["references.html", "References", " References Angel, E. (2000). Interactive computer graphics : A top-down approach with OpenGL. Boston, MA: Addison Wesley Longman. Angel, E. (2001a). Batch-file computer graphics : A bottom-up approach with QuickTime. Boston, MA: Wesley Addison Longman. Angel, E. (2001b). Test second book by angel. Boston, MA: Wesley Addison Longman. "],["A-the-first-appendix.html", "A The First Appendix", " A The First Appendix This first appendix includes all of the R chunks of code that were hidden throughout the document (using the include = FALSE chunk tag) to help with readability and/or setup. In the main Rmd file # By default tinytex only compiles once; compiling multiple # times is necessary to ensure the List of Figures and List of Tables # page numbers are correct if listed in the Table of Contents options(tinytex.compile.min_times = 3) # This chunk ensures that the gaelsdown package is # installed and loaded. This gaelsdown package includes # the template files for the thesis. if(!require(devtools)) install.packages(&quot;devtools&quot;, repos = &quot;http://cran.rstudio.com&quot;) if(!require(gaelsdown)) devtools::install_github(&quot;eugenesit/gaelsdown&quot;) library(gaelsdown) In Chapter ??: "],["B-the-second-appendix-for-fun.html", "B The Second Appendix, for Fun", " B The Second Appendix, for Fun "]]
